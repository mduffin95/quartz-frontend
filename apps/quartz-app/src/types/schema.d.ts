/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/health": {
    /**
     * Get Health Route
     * @description Health endpoint for the API.
     */
    get: operations["get_health_route_health_get"];
  };
  "/{source}/{region}/generation": {
    /**
     * Get Historic Timeseries Route
     * @description Function for the historic generation route.
     */
    get: operations["get_historic_timeseries_route__source___region__generation_get"];
  };
  "/{source}/{region}/forecast": {
    /**
     * Get Forecast Timeseries Route
     * @description Function for the forecast generation route.
     */
    get: operations["get_forecast_timeseries_route__source___region__forecast_get"];
  };
  "/sources": {
    /**
     * Get Sources Route
     * @description Function for the sources route.
     */
    get: operations["get_sources_route_sources_get"];
  };
  "/{source}/regions": {
    /**
     * Get Regions Route
     * @description Function for the regions route.
     */
    get: operations["get_regions_route__source__regions_get"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /**
     * ActualPower
     * @description Defines the data structure for an actual power value returned by the API.
     */
    ActualPower: {
      /** Powerkw */
      PowerKW: number;
      /**
       * Time
       * Format: date-time
       */
      Time: string;
    };
    /**
     * GetForecastGenerationResponse
     * @description Model for the forecast generation endpoint response.
     */
    GetForecastGenerationResponse: {
      /** Values */
      values: components["schemas"]["PredictedPower"][];
    };
    /**
     * GetHealthResponse
     * @description Model for the health endpoint response.
     */
    GetHealthResponse: {
      /** Status */
      status: number;
    };
    /**
     * GetHistoricGenerationResponse
     * @description Model for the historic generation endpoint response.
     */
    GetHistoricGenerationResponse: {
      /** Values */
      values: components["schemas"]["ActualPower"][];
    };
    /**
     * GetRegionsResponse
     * @description Model for the regions endpoint response.
     */
    GetRegionsResponse: {
      /** Regions */
      regions: string[];
    };
    /**
     * GetSourcesResponse
     * @description Model for the sources endpoint response.
     */
    GetSourcesResponse: {
      /** Sources */
      sources: string[];
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /**
     * PredictedPower
     * @description Defines the data structure for a predicted power value returned by the API.
     */
    PredictedPower: {
      /** Powerkw */
      PowerKW: number;
      /**
       * Time
       * Format: date-time
       */
      Time: string;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
  /**
   * Get Health Route
   * @description Health endpoint for the API.
   */
  get_health_route_health_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["GetHealthResponse"];
        };
      };
    };
  };
  /**
   * Get Historic Timeseries Route
   * @description Function for the historic generation route.
   */
  get_historic_timeseries_route__source___region__generation_get: {
    parameters: {
      path: {
        region: string;
        source: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["GetHistoricGenerationResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Forecast Timeseries Route
   * @description Function for the forecast generation route.
   */
  get_forecast_timeseries_route__source___region__forecast_get: {
    parameters: {
      path: {
        region: string;
        source: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["GetForecastGenerationResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Get Sources Route
   * @description Function for the sources route.
   */
  get_sources_route_sources_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["GetSourcesResponse"];
        };
      };
    };
  };
  /**
   * Get Regions Route
   * @description Function for the regions route.
   */
  get_regions_route__source__regions_get: {
    parameters: {
      path: {
        source: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["GetRegionsResponse"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
}
